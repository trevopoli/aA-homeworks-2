{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,SAAS;AACT;AACA;;AAEA,yB;;;;;;;;;;ACxBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;;AAEA,8B;;;;;;;;;;ACzDA,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;;AAG9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA,uBAAuB,cAAc;AACrC,+BAA+B,QAAQ;;AAEvC;AACA;;AAEA;AACA,6CAA6C,QAAQ;AACrD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,6B;;;;;;UChDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,oBAAoB,mBAAO,CAAC,kDAAgB;;AAE5C;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL,CAAC,E","file":"bundle.js","sourcesContent":["const APIUtil = {\n\n    followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\n\n    unfollowUser: id => APIUtil.changeFollowStatus(id, 'DELETE'),\n\n    changeFollowStatus: (id, method) => (\n        $.ajax({\n            type: method,\n            url: `/users/${id}/follow`,\n            dataType: 'json'\n        })\n    ),\n\n    searchUsers: query => (\n        $.ajax({\n            type: 'GET',\n            url: '/users/search',\n            dataType: 'json',\n            data: {query}\n        })\n    )\n};\n\nmodule.exports = APIUtil;","const APIUtil = require('./api_util');\n\nclass FollowToggle {\n    constructor(el) {\n        this.$el = $(el);\n        this.userId = this.$el.data('user-id');\n        this.followState = this.$el.data('initial-follow-state');\n        this.render();\n        this.handleClick();\n    }\n\n    render() {\n        switch (this.followState) {\n            case 'followed':\n                this.$el.prop('disabled', false);\n                this.$el.text(\"Unfollow!\");\n                break;\n            case 'unfollowed':\n                this.$el.prop('disabled', false);\n                this.$el.text(\"Follow!\");\n                break;\n            case 'following':\n                this.$el.prop('disabled', true);\n                this.$el.text(\"Following...\");\n                break;\n            case 'unfollowing':\n                this.$el.prop('disabled', true);\n                this.$el.text(\"Unfollowing...\");\n                break;\n        }\n    };\n\n    handleClick() {\n        this.$el.on(\"click\", event => {\n            const followToggle = this;\n\n            event.preventDefault();\n\n            if (this.followState === \"unfollowed\"){\n                this.followState = \"following\";\n                this.render();\n                APIUtil.followUser(followToggle.userId).then(() => {\n                    followToggle.followState = \"followed\";\n                    followToggle.render();\n                });\n            } else if (this.followState === \"followed\"){\n                this.followState = \"unfollowing\";\n                this.render();\n                APIUtil.unfollowUser(followToggle.userId).then(() => {\n                    followToggle.followState = \"unfollowed\";\n                    followToggle.render();\n                });\n            }\n        });\n    }\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require(\"./api_util\");\nconst FollowToggle = require('./follow_toggle');\n\n\nclass UsersSearch {\n    constructor (el) {\n        this.$el = $(el);\n        this.$input = this.$el.find('input[name=username]');\n        this.$ul = this.$el.find(\"ul.users\");\n        this.handleInput();\n    }\n\n    handleInput() {\n        const userSearch = this;\n\n        this.$el.on(\"input\", function () {\n            console.log(userSearch.$input.val());\n            APIUtil.searchUsers(userSearch.$input.val()).then((users)=>{\n                userSearch.renderResults(users);\n            });\n        });\n    }\n\n    renderResults(users) {\n        this.$ul.empty();\n\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n\n            let $a = $('<a></a>');\n            $a.text(`${user.username}`);\n            $a.attr('href', `${user.id}`);\n\n            let $li = $('<li></li>');\n            $li.append($a);\n\n            let $followButton = $('<button></button');\n            $followButton.data('user-id', `${user.id}`);\n            $followButton.data('initial-follow-state', user.followed ? 'followed' : 'unfollowed');\n            new FollowToggle($followButton);\n\n            $li.append($followButton);\n\n            this.$ul.append($li);\n        }\n    }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\nconst UsersSearch = require('./users_search');\n\n$(function () {\n\n    const $followButtons = $('.follow-toggle');\n    $followButtons.each( function (idx, el) {\n        new FollowToggle(el);\n    });\n\n    const $usersSearch = $('.users-search');\n    $usersSearch.each( function (idx, el) {\n        new UsersSearch(el);\n    });\n\n});"],"sourceRoot":""}